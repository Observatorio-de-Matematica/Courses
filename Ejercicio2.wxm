/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 16.04.2 ] */

/* [wxMaxima: title   start ]
Ecuación del movimiento de una partícula en una circunferencia
   [wxMaxima: title   end   ] */

/* [wxMaxima: comment start ]
TeX:

\hypersetup{pdfauthor={Daniel Volinski},
            pdftitle={Ecuación del movimiento de una partícula en una circunferencia},
            pdfsubject={MECÁNICA LAGRANGIANA},
            pdfkeywords={Física Hasta Que Te Aburras}}

Based on Física Hasta Que Te Aburras
\href{https://www.youtube.com/watch?v=v9GHq8S0efE}
{MECÁNICA LAGRANGIANA (EJERCICIO #4) [Ecuación del movimiento de una partícula en una circunferencia]}

Written by Daniel Volinski at \href{mailto:danielvolinski@yahoo.es}{danielvolinski@yahoo.es}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
info:build_info()$info@version;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
reset()$kill(all)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
derivabbrev:true$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ratprint:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
fpprintprec:5$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
if get('draw,'version)=false then load(draw)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxplot_size:[1024,768]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
if get('optvar,'version)=false then load(optvar)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
if get('rkf45,'version)=false then load(rkf45)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
declare(trigsimp,evfun)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
declare(t,mainvar)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: section start ]
Settings
   [wxMaxima: section end   ] */

/* [wxMaxima: fold    start ] */

/* [wxMaxima: input   start ] */
orderless(m,g,R)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
declare([m,g,R],constant)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
assume(m>0,g>0,R>0)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
params:[m=1.0,g=9.8,R=5.0]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
τ:60$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Generalized coordinates}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
depends(φ,t)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Geometry}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
r:R*[cos(φ),sin(φ)]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
v:diff(r,t);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: fold    end   ] */

/* [wxMaxima: section start ]
Lagrangian Formalism
   [wxMaxima: section end   ] */

/* [wxMaxima: fold    start ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Kinetic Energy}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ldisplay(T:trigsimp(½*m*v.v))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Potential Energy}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ldisplay(V:m*g*R*sin(φ))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Lagrangian}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ldisplay(L:expand(T-V))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Momentum Conjugate}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ldisplay(P:ev(diff(L,'diff(φ,t))))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
linsolve(p=P,diff(φ,t));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Generalized Forces}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ldisplay(F:diff(L,φ))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Euler-Lagrange Equation}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
aa:el(L,φ,t)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bb:ev(aa,eval,diff)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bb[1]:subst([k[0]=-E],-bb[1])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bb[2]:lhs(bb[2])-rhs(bb[2])=0$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Conservation Laws}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bb[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Equations of Motion}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bb[2];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Solve for second derivative of coordinates}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
linsol:linsolve(bb[2],diff(φ,t,2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Check Conservation of Energy}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lhs(bb[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst(linsol,diff(lhs(bb[1]),t)),fullratsimp;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Equilibrium points}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bb[2],[diff(φ,t)=0,diff(φ,t,2)=0];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
sol:solve(%,cos(φ));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Small angles approximation}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
depends(ε,t)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ldisplay(Cφ:ratdisrep(taylor(cos(ε-π/2),ε,0,1)))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ldisplay(Sφ:ratdisrep(taylor(sin(ε-π/2),ε,0,1)))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bb[2],[φ=ε-π/2],diff,eval;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
%,[cos(ε-π/2)=Cφ,sin(ε-π/2)=Sφ],expand;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Solve for second derivative of coordinates}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
linsol:linsolve(%,diff(ε,t,2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: fold    end   ] */

/* [wxMaxima: section start ]
Hamiltonian Formalism
   [wxMaxima: section end   ] */

/* [wxMaxima: fold    start ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Legendre Transformation}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Legendre:linsolve([p=P],['diff(φ,t)]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Hamiltonian}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ldisplay(H:ev(p*'diff(φ,t)-L,Legendre))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Equations of Motion}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Hq:makelist(Hq[i],i,1,2)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
Hq[1]:'diff(φ,t)=diff(H,p)$
Hq[2]:'diff(p,t)=-diff(H,φ)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
map(ldisp,Hq)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: fold    end   ] */

/* [wxMaxima: section start ]
Reduce Order
   [wxMaxima: section end   ] */

/* [wxMaxima: fold    start ] */

/* [wxMaxima: input   start ] */
depends(Φ,t)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
gradef(φ,t,Φ)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Euler-Lagrange Equations}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
aa:el(L,φ,t)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bb:ev(aa,eval,diff)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bb[1]:subst([k[0]=-E],-bb[1])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bb[2]:lhs(bb[2])-rhs(bb[2])=0$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Conservation Laws}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bb[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Equations of Motion}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bb[2];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Solve for second derivative of coordinates}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
linsol:linsolve(bb[2],diff(φ,t,2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Numerical solution (Lagrangian)}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
kill(labels)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
funcs:[φ,Φ]$ldisplay(funcs)$
initial:[π/5,0]$ldisplay(initial)$
odes:[Φ,rhs(linsol[1])]$ldisplay(odes)$
interval:[t,0,τ]$ldisplay(interval)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
rksol:rkf45(odes,funcs,initial,interval,
            absolute_tolerance=1E-8,report=true),params$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
table_form(rksol,column_names=append([t],funcs))$
   [wxMaxima: comment end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: input   start ] */
wxplot2d([discrete,map(lambda([u],part(u,[1,2])),rksol)],
         [style,[lines,2]],[xlabel,"t"],[ylabel,"value"],
         [legend,"φ"],[gnuplot_preamble,"set key bottom left"])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: input   start ] */
wxplot2d([discrete,map(lambda([u],part(u,[1,3])),rksol)],
         [style,[lines,2]],[xlabel,"t"],[ylabel,"value"],
         [legend,"dφ/dt"],[gnuplot_preamble,"set key top left"])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: input   start ] */
wxplot2d([[discrete,map(lambda([u],part(u,[2,3])),rksol)],
          [discrete,[part(initial,[1,2])]]],[axes,solid],
         [title,"Phase Space for φ"],[point_type,circle],
         [style,[lines,2],[points,3]],[color,magenta,red],
         [xlabel,"φ"],[ylabel,"dφ/dt"],[legend,false])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Check Conservation of Energy using the Numerical Data}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
W:bb[1],map("=",funcs,initial),params,numer,eval;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxplot2d([discrete,makelist([first(rkline),
          ev(lhs(bb[1]),map("=",funcs,rest(rkline)),params)],rkline,rksol)],
         [xlabel,"t"],[y,lhs(W)-0.001,lhs(W)+0.001],[ylabel,"Energy"])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: fold    end   ] */

/* [wxMaxima: section start ]
Graphics
   [wxMaxima: section end   ] */

/* [wxMaxima: fold    start ] */

/* [wxMaxima: input   start ] */
kill(labels)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxanimate_framerate:60$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxanimate_autoplay:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
rksol:rk(odes,funcs,initial,[t,0,τ/2,0.1]),params$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
table_form(rksol,column_names=append([t],funcs))$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
set_draw_defaults(proportional_axes = xy, delay = 1,
                  xtics = 1, ytics = 1,
                  xrange = [-1,1], yrange = [-1,1])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
TeX:

\textbf{Create animated GIF file}

   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
draw(terminal   = 'animated_gif,
     file_name  = "Particula en una circunferencia",
     makelist(gr2d(
       color         = red,
       point_type    = filled_circle,
       point_size    = 2,
       points_joined = true,
       line_width    = 2,
       key           = sconcat("t=",float(t)/10," s"),
       points([[0.0,0.0],
               [cos(rksol[t][2]),sin(rksol[t][2])]])),
         t,1,length(rksol))),params$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
time(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: input   start ] */
wxanimate_framerate:30$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
print("Click the figure to start animation")$
with_slider_draw(
    t,makelist(i,i,1,length(rksol)),
    color         = red,
    point_type    = filled_circle,
    point_size    = 2,
    points_joined = true,
    line_width    = 2,
    key           = sconcat("t=",float(t)/10," s"),
    points([[0.0,0.0],
            [cos(rksol[t][2]),sin(rksol[t][2])]])),params$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
time(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: page break    ] */

/* [wxMaxima: input   start ] */
print("Click the figure to start animation")$
wxanimate_draw(
    t,length(rksol),
    color         = red,
    point_type    = filled_circle,
    point_size    = 2,
    points_joined = true,
    line_width    = 2,
    key           = sconcat("t=",float(t)/10," s"),
    points([[0.0,0.0],
            [cos(rksol[t][2]),sin(rksol[t][2])]])),params$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
time(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: fold    end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
